{
  "address": "0x8593675D87cF30D7eAD714C8e7C706f95A28F42c",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountADesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBDesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenDesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETHMin",
          "type": "uint256"
        }
      ],
      "name": "addLiquidityETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "benefactor",
          "type": "address"
        }
      ],
      "name": "recoverLeftoverTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "benefactor",
          "type": "address"
        }
      ],
      "name": "recoverNativeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xed39152a9968dec532a221a6bd29760ce55bdce0fd87b2f5dcaf4deeaf685495",
  "receipt": {
    "to": null,
    "from": "0xf5CA36c9873d61Bc28C117BD470981Ef6647A685",
    "contractAddress": "0x8593675D87cF30D7eAD714C8e7C706f95A28F42c",
    "transactionIndex": 50,
    "gasUsed": "872857",
    "logsBloom": "0x
    "blockHash": "0x28c560f08bd395dc9a23c5697632a4804cbb2100b0592136da5fb32efcdf4fc2",
    "transactionHash": "0xed39152a9968dec532a221a6bd29760ce55bdce0fd87b2f5dcaf4deeaf685495",
    "logs": [
      {
        "transactionIndex": 50,
        "blockNumber": 8492794,
        "transactionHash": "0xed39152a9968dec532a221a6bd29760ce55bdce0fd87b2f5dcaf4deeaf685495",
        "address": "0x8593675D87cF30D7eAD714C8e7C706f95A28F42c",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f5ca36c9873d61bc28c117bd470981ef6647a685"
        ],
        "data": "0x",
        "logIndex": 97,
        "blockHash": "0x28c560f08bd395dc9a23c5697632a4804cbb2100b0592136da5fb32efcdf4fc2"
      }
    ],
    "blockNumber": 8492794,
    "cumulativeGasUsed": "6631730",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
  ],
  "numDeployments": 1,
  "solcInputHash": "abdc32abd1c0b218d419fc4171b6e4b0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"benefactor\",\"type\":\"address\"}],\"name\":\"recoverLeftoverTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"benefactor\",\"type\":\"address\"}],\"name\":\"recoverNativeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,uint256,uint256)\":{\"details\":\"add liquidity to uniswap pool\",\"params\":{\"amountADesired\":\"first token deposit amount\",\"amountAMin\":\"first token min amount\",\"amountBDesired\":\"second token deposit amount\",\"amountBMin\":\"second token min amount\",\"tokenA\":\"first token address\",\"tokenB\":\"first token address\"}},\"addLiquidityETH(address,uint256,uint256,uint256)\":{\"details\":\"add liquidity to uniswap pool with eth\",\"params\":{\"amountETHMin\":\"eth min amount\",\"amountTokenDesired\":\"token deposit amount\",\"amountTokenMin\":\"token min amount\",\"token\":\"token address\"}},\"constructor\":{\"params\":{\"router_\":\"uniswap router address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"recoverLeftoverTokens(address,address)\":{\"details\":\"Recovery functions incase assets are stuck in the contract\",\"params\":{\"benefactor\":\"receiver address\",\"token\":\"token address\"}},\"recoverNativeToken(address)\":{\"details\":\"Recovery functions native token are stuck in the contract\",\"params\":{\"benefactor\":\"receiver address\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Liquidity extension contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"add liquidity to uniswap router\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/LiquidityExtension.sol\":\"LiquidityExtension\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n}\\n\",\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\"},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\nimport './IUniswapV2Router01.sol';\\n\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountETH);\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external payable;\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\"},\"contracts/utils/LiquidityExtension.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/interfaces/IERC20.sol\\\";\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport {IUniswapV2Router02} from \\\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\\\";\\n\\n/**\\n * @title Liquidity extension contract\\n * @notice add liquidity to uniswap router\\n */\\ncontract LiquidityExtension is Ownable {\\n  // uniswap router address\\n  address public router;\\n\\n  /// @param router_ uniswap router address\\n  constructor(address router_) {\\n    router = router_;\\n  }\\n\\n  /**\\n   * @dev add liquidity to uniswap pool\\n   * @param tokenA first token address\\n   * @param tokenB first token address\\n   * @param amountADesired first token deposit amount\\n   * @param amountBDesired second token deposit amount\\n   * @param amountAMin first token min amount\\n   * @param amountBMin second token min amount\\n   */\\n  function addLiquidity(\\n    address tokenA,\\n    address tokenB,\\n    uint256 amountADesired,\\n    uint256 amountBDesired,\\n    uint256 amountAMin,\\n    uint256 amountBMin\\n  ) external {\\n    IERC20(tokenA).transferFrom(msg.sender, address(this), amountADesired);\\n    IERC20(tokenB).transferFrom(msg.sender, address(this), amountBDesired);\\n    IERC20(tokenA).approve(router, amountADesired);\\n    IERC20(tokenB).approve(router, amountBDesired);\\n    IUniswapV2Router02(router).addLiquidity(\\n      tokenA,\\n      tokenB,\\n      amountADesired,\\n      amountBDesired,\\n      amountAMin,\\n      amountBMin,\\n      msg.sender,\\n      block.timestamp + 10 minutes\\n    );\\n    uint256 balanceA = IERC20(tokenA).balanceOf(address(this));\\n    IERC20(tokenA).transfer(msg.sender, balanceA);\\n    uint256 balanceB = IERC20(tokenB).balanceOf(address(this));\\n    IERC20(tokenB).transfer(msg.sender, balanceB);\\n  }\\n\\n  /**\\n   * @dev add liquidity to uniswap pool with eth\\n   * @param token token address\\n   * @param amountTokenDesired token deposit amount\\n   * @param amountTokenMin token min amount\\n   * @param amountETHMin eth min amount\\n   */\\n  function addLiquidityETH(\\n    address token,\\n    uint256 amountTokenDesired,\\n    uint256 amountTokenMin,\\n    uint256 amountETHMin\\n  ) external payable {\\n    IERC20(token).transferFrom(msg.sender, address(this), amountTokenDesired);\\n    IERC20(token).approve(router, amountTokenDesired);\\n    (, uint256 amountETH, ) = IUniswapV2Router02(router).addLiquidityETH{value: msg.value}(\\n      token,\\n      amountTokenDesired,\\n      amountTokenMin,\\n      amountETHMin,\\n      msg.sender,\\n      block.timestamp + 10 minutes\\n    );\\n    uint256 balance = IERC20(token).balanceOf(address(this));\\n    IERC20(token).transfer(msg.sender, balance);\\n    if (msg.value > amountETH) transferDust();\\n  }\\n\\n  /// @notice  transfer remainning eth\\n  function transferDust() internal {\\n    address liquidityProvider = msg.sender;\\n    payable(liquidityProvider).transfer(address(this).balance);\\n  }\\n\\n  /**\\n   * @dev Recovery functions incase assets are stuck in the contract\\n   * @param token token address\\n   * @param benefactor receiver address\\n   */\\n  function recoverLeftoverTokens(address token, address benefactor) public onlyOwner {\\n    uint256 leftOverBalance = IERC20(token).balanceOf(address(this));\\n    IERC20(token).transfer(benefactor, leftOverBalance);\\n  }\\n\\n  /**\\n   * @dev Recovery functions native token are stuck in the contract\\n   * @param benefactor receiver address\\n   */\\n  function recoverNativeToken(address benefactor) public onlyOwner {\\n    payable(benefactor).transfer(address(this).balance);\\n  }\\n\\n  /// @notice to receive eth from uniswap router\\n  receive() external payable {}\\n}\\n\",\"keccak256\":\"0xff909867ee85c13a19fa416696cfe3b8f6a619649f5c1b4dc3e851ed8fd85b18\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610edc380380610edc83398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b610df0806100ec6000396000f3fe60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b146100f5578063d609b6901461012b578063f2fde38b1461014b578063f887ea401461016b57600080fd5b80633351733f1461008b578063374998c2146100ad5780635625d383146100cd578063715018a6146100e057600080fd5b3661008657005b600080fd5b34801561009757600080fd5b506100ab6100a6366004610c48565b61018b565b005b3480156100b957600080fd5b506100ab6100c8366004610c9d565b610683565b6100ab6100db366004610cbf565b6106c4565b3480156100ec57600080fd5b506100ab6109b4565b34801561010157600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b34801561013757600080fd5b506100ab610146366004610cf8565b6109c8565b34801561015757600080fd5b506100ab610166366004610c9d565b610ad6565b34801561017757600080fd5b5060015461010f906001600160a01b031681565b6040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b038716906323b872dd90606401602060405180830381600087803b1580156101d957600080fd5b505af11580156101ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102119190610d2b565b506040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038616906323b872dd90606401602060405180830381600087803b15801561026057600080fd5b505af1158015610274573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102989190610d2b565b5060015460405163095ea7b360e01b81526001600160a01b039182166004820152602481018690529087169063095ea7b390604401602060405180830381600087803b1580156102e757600080fd5b505af11580156102fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031f9190610d2b565b5060015460405163095ea7b360e01b81526001600160a01b039182166004820152602481018590529086169063095ea7b390604401602060405180830381600087803b15801561036e57600080fd5b505af1158015610382573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a69190610d2b565b506001546001600160a01b031663e8e33700878787878787336103cb42610258610d4d565b60405160e08a901b6001600160e01b03191681526001600160a01b039889166004820152968816602488015260448701959095526064860193909352608485019190915260a484015290921660c482015260e481019190915261010401606060405180830381600087803b15801561044257600080fd5b505af1158015610456573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047a9190610d73565b50506040516370a0823160e01b8152306004820152600091506001600160a01b038816906370a082319060240160206040518083038186803b1580156104bf57600080fd5b505afa1580156104d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f79190610da1565b60405163a9059cbb60e01b8152336004820152602481018290529091506001600160a01b0388169063a9059cbb90604401602060405180830381600087803b15801561054257600080fd5b505af1158015610556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057a9190610d2b565b506040516370a0823160e01b81523060048201526000906001600160a01b038816906370a082319060240160206040518083038186803b1580156105bd57600080fd5b505afa1580156105d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f59190610da1565b60405163a9059cbb60e01b8152336004820152602481018290529091506001600160a01b0388169063a9059cbb90604401602060405180830381600087803b15801561064057600080fd5b505af1158015610654573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106789190610d2b565b505050505050505050565b61068b610b54565b6040516001600160a01b038216904780156108fc02916000818181858888f193505050501580156106c0573d6000803e3d6000fd5b5050565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd90606401602060405180830381600087803b15801561071257600080fd5b505af1158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a9190610d2b565b5060015460405163095ea7b360e01b81526001600160a01b039182166004820152602481018590529085169063095ea7b390604401602060405180830381600087803b15801561079957600080fd5b505af11580156107ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d19190610d2b565b506001546000906001600160a01b031663f305d7193487878787336107f842610258610d4d565b60405160e089901b6001600160e01b03191681526001600160a01b039687166004820152602481019590955260448501939093526064840191909152909216608482015260a481019190915260c4016060604051808303818588803b15801561086057600080fd5b505af1158015610874573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108999190610d73565b506040516370a0823160e01b8152306004820152909250600091506001600160a01b038716906370a082319060240160206040518083038186803b1580156108e057600080fd5b505afa1580156108f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109189190610da1565b60405163a9059cbb60e01b8152336004820152602481018290529091506001600160a01b0387169063a9059cbb90604401602060405180830381600087803b15801561096357600080fd5b505af1158015610977573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099b9190610d2b565b50813411156109ac576109ac610bae565b505050505050565b6109bc610b54565b6109c66000610bdc565b565b6109d0610b54565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a082319060240160206040518083038186803b158015610a1257600080fd5b505afa158015610a26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4a9190610da1565b60405163a9059cbb60e01b81526001600160a01b038481166004830152602482018390529192509084169063a9059cbb90604401602060405180830381600087803b158015610a9857600080fd5b505af1158015610aac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad09190610d2b565b50505050565b610ade610b54565b6001600160a01b038116610b485760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610b5181610bdc565b50565b6000546001600160a01b031633146109c65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b3f565b604051339081904780156108fc02916000818181858888f193505050501580156106c0573d6000803e3d6000fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610c4357600080fd5b919050565b60008060008060008060c08789031215610c6157600080fd5b610c6a87610c2c565b9550610c7860208801610c2c565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600060208284031215610caf57600080fd5b610cb882610c2c565b9392505050565b60008060008060808587031215610cd557600080fd5b610cde85610c2c565b966020860135965060408601359560600135945092505050565b60008060408385031215610d0b57600080fd5b610d1483610c2c565b9150610d2260208401610c2c565b90509250929050565b600060208284031215610d3d57600080fd5b81518015158114610cb857600080fd5b60008219821115610d6e57634e487b7160e01b600052601160045260246000fd5b500190565b600080600060608486031215610d8857600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215610db357600080fd5b505191905056fea2646970667358221220cc89aaabae10cf00b8cc0ebc5e2a341b1667c57b27c6ed26d5398e859ab8d07664736f6c63430008090033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b146100f5578063d609b6901461012b578063f2fde38b1461014b578063f887ea401461016b57600080fd5b80633351733f1461008b578063374998c2146100ad5780635625d383146100cd578063715018a6146100e057600080fd5b3661008657005b600080fd5b34801561009757600080fd5b506100ab6100a6366004610c48565b61018b565b005b3480156100b957600080fd5b506100ab6100c8366004610c9d565b610683565b6100ab6100db366004610cbf565b6106c4565b3480156100ec57600080fd5b506100ab6109b4565b34801561010157600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b34801561013757600080fd5b506100ab610146366004610cf8565b6109c8565b34801561015757600080fd5b506100ab610166366004610c9d565b610ad6565b34801561017757600080fd5b5060015461010f906001600160a01b031681565b6040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b038716906323b872dd90606401602060405180830381600087803b1580156101d957600080fd5b505af11580156101ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102119190610d2b565b506040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038616906323b872dd90606401602060405180830381600087803b15801561026057600080fd5b505af1158015610274573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102989190610d2b565b5060015460405163095ea7b360e01b81526001600160a01b039182166004820152602481018690529087169063095ea7b390604401602060405180830381600087803b1580156102e757600080fd5b505af11580156102fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031f9190610d2b565b5060015460405163095ea7b360e01b81526001600160a01b039182166004820152602481018590529086169063095ea7b390604401602060405180830381600087803b15801561036e57600080fd5b505af1158015610382573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a69190610d2b565b506001546001600160a01b031663e8e33700878787878787336103cb42610258610d4d565b60405160e08a901b6001600160e01b03191681526001600160a01b039889166004820152968816602488015260448701959095526064860193909352608485019190915260a484015290921660c482015260e481019190915261010401606060405180830381600087803b15801561044257600080fd5b505af1158015610456573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047a9190610d73565b50506040516370a0823160e01b8152306004820152600091506001600160a01b038816906370a082319060240160206040518083038186803b1580156104bf57600080fd5b505afa1580156104d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f79190610da1565b60405163a9059cbb60e01b8152336004820152602481018290529091506001600160a01b0388169063a9059cbb90604401602060405180830381600087803b15801561054257600080fd5b505af1158015610556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057a9190610d2b565b506040516370a0823160e01b81523060048201526000906001600160a01b038816906370a082319060240160206040518083038186803b1580156105bd57600080fd5b505afa1580156105d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f59190610da1565b60405163a9059cbb60e01b8152336004820152602481018290529091506001600160a01b0388169063a9059cbb90604401602060405180830381600087803b15801561064057600080fd5b505af1158015610654573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106789190610d2b565b505050505050505050565b61068b610b54565b6040516001600160a01b038216904780156108fc02916000818181858888f193505050501580156106c0573d6000803e3d6000fd5b5050565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd90606401602060405180830381600087803b15801561071257600080fd5b505af1158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a9190610d2b565b5060015460405163095ea7b360e01b81526001600160a01b039182166004820152602481018590529085169063095ea7b390604401602060405180830381600087803b15801561079957600080fd5b505af11580156107ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d19190610d2b565b506001546000906001600160a01b031663f305d7193487878787336107f842610258610d4d565b60405160e089901b6001600160e01b03191681526001600160a01b039687166004820152602481019590955260448501939093526064840191909152909216608482015260a481019190915260c4016060604051808303818588803b15801561086057600080fd5b505af1158015610874573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108999190610d73565b506040516370a0823160e01b8152306004820152909250600091506001600160a01b038716906370a082319060240160206040518083038186803b1580156108e057600080fd5b505afa1580156108f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109189190610da1565b60405163a9059cbb60e01b8152336004820152602481018290529091506001600160a01b0387169063a9059cbb90604401602060405180830381600087803b15801561096357600080fd5b505af1158015610977573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099b9190610d2b565b50813411156109ac576109ac610bae565b505050505050565b6109bc610b54565b6109c66000610bdc565b565b6109d0610b54565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a082319060240160206040518083038186803b158015610a1257600080fd5b505afa158015610a26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4a9190610da1565b60405163a9059cbb60e01b81526001600160a01b038481166004830152602482018390529192509084169063a9059cbb90604401602060405180830381600087803b158015610a9857600080fd5b505af1158015610aac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad09190610d2b565b50505050565b610ade610b54565b6001600160a01b038116610b485760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610b5181610bdc565b50565b6000546001600160a01b031633146109c65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b3f565b604051339081904780156108fc02916000818181858888f193505050501580156106c0573d6000803e3d6000fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610c4357600080fd5b919050565b60008060008060008060c08789031215610c6157600080fd5b610c6a87610c2c565b9550610c7860208801610c2c565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600060208284031215610caf57600080fd5b610cb882610c2c565b9392505050565b60008060008060808587031215610cd557600080fd5b610cde85610c2c565b966020860135965060408601359560600135945092505050565b60008060408385031215610d0b57600080fd5b610d1483610c2c565b9150610d2260208401610c2c565b90509250929050565b600060208284031215610d3d57600080fd5b81518015158114610cb857600080fd5b60008219821115610d6e57634e487b7160e01b600052601160045260246000fd5b500190565b600080600060608486031215610d8857600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215610db357600080fd5b505191905056fea2646970667358221220cc89aaabae10cf00b8cc0ebc5e2a341b1667c57b27c6ed26d5398e859ab8d07664736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addLiquidity(address,address,uint256,uint256,uint256,uint256)": {
        "details": "add liquidity to uniswap pool",
        "params": {
          "amountADesired": "first token deposit amount",
          "amountAMin": "first token min amount",
          "amountBDesired": "second token deposit amount",
          "amountBMin": "second token min amount",
          "tokenA": "first token address",
          "tokenB": "first token address"
        }
      },
      "addLiquidityETH(address,uint256,uint256,uint256)": {
        "details": "add liquidity to uniswap pool with eth",
        "params": {
          "amountETHMin": "eth min amount",
          "amountTokenDesired": "token deposit amount",
          "amountTokenMin": "token min amount",
          "token": "token address"
        }
      },
      "constructor": {
        "params": {
          "router_": "uniswap router address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "recoverLeftoverTokens(address,address)": {
        "details": "Recovery functions incase assets are stuck in the contract",
        "params": {
          "benefactor": "receiver address",
          "token": "token address"
        }
      },
      "recoverNativeToken(address)": {
        "details": "Recovery functions native token are stuck in the contract",
        "params": {
          "benefactor": "receiver address"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Liquidity extension contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "add liquidity to uniswap router",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/utils/LiquidityExtension.sol:LiquidityExtension",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 6879,
        "contract": "contracts/utils/LiquidityExtension.sol:LiquidityExtension",
        "label": "router",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}